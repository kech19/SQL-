CREATE TABLE conditions (
START DATE
,STOP DATE
,PATIENT VARCHAR(1000)
,ENCOUNTER VARCHAR(1000)
,CODE VARCHAR(1000)
,DESCRIPTION VARCHAR(200)
);

CREATE TABLE encounters (
 Id VARCHAR(100)
,START TIMESTAMP
,STOP TIMESTAMP
,PATIENT VARCHAR(100)
,ORGANIZATION VARCHAR(100)
,PROVIDER VARCHAR(100)
,PAYER VARCHAR(100)
,ENCOUNTERCLASS VARCHAR(100)
,CODE VARCHAR(100)
,DESCRIPTION VARCHAR(100)
,BASE_ENCOUNTER_COST FLOAT
,TOTAL_CLAIM_COST FLOAT
,PAYER_COVERAGE FLOAT
,REASONCODE VARCHAR(100)
--,REASONDESCRIPTION VARCHAR(100)
);

CREATE TABLE immunizations
(
 DATE TIMESTAMP
,PATIENT varchar(100)
,ENCOUNTER varchar(100)
,CODE int
,DESCRIPTION varchar(500)
--,BASE_COST float
);

CREATE TABLE patients
(
 Id VARCHAR(100)
,BIRTHDATE date
,DEATHDATE date
,SSN VARCHAR(100)
,DRIVERS VARCHAR(100)
,PASSPORT VARCHAR(100)
,PREFIX VARCHAR(100)
,FIRST VARCHAR(100)
,LAST VARCHAR(100)
,SUFFIX VARCHAR(100)
,MAIDEN VARCHAR(100)
,MARITAL VARCHAR(100)
,RACE VARCHAR(100)
,ETHNICITY VARCHAR(100)
,GENDER VARCHAR(100)
,BIRTHPLACE VARCHAR(100)
,ADDRESS VARCHAR(100)
,CITY VARCHAR(100)
,STATE VARCHAR(100)
,COUNTY VARCHAR(100)
,FIPS INT 
,ZIP INT
,LAT float
,LON float
,HEALTHCARE_EXPENSES float
,HEALTHCARE_COVERAGE float
,INCOME int
,Mrn int
);

/* What are the different types of encounters at the hospital? */

SELECT DISTINCT 
	encounterclass 
FROM 
	encounters;

/* Select the data for the patients who were admitted inpatient? */

SELECT * 
FROM 
	encounters
WHERE 
	encounterclass = 'inpatient';

/* Select the data for the patients who were admitted inpatient and with ICU admission? */

SELECT * 
FROM 
	encounters
WHERE 
	encounterclass = 'inpatient' 
AND 
	description = 'ICU Admission';

/* Select the data for the patients who were admitted ambulatory or ICU outpatient. */

SELECT * 
FROM 
	encounters
WHERE 
	encounterclass = 'ambulatory' 
OR
	encounterclass = 'outpatient';

/* Select the data for all the descriptions for the conditions 
 and the number of times it happened. 
Order the result from most popular to least popular for the data 
where occurence is greater than 5000. */

SELECT 
	description, 
	COUNT(description) AS occurence
FROM 
	conditions
GROUP BY 
	description
HAVING 
	COUNT(description) > 5000
ORDER BY 
	COUNT(description) DESC;

/* Select the data for all the patients 
who have chronic kidney disease based on condition codes. */

SELECT * 
FROM 
	conditions
WHERE code IN ('585.1', '585.2', '585.3', '585.4');


/* Select the data for the vaccines given to people with each conditions. */
SELECT 
	c.description, 
	i.description 
FROM 
	conditions c 
JOIN 
	immunizations i 
ON 
	c.patient = i.patient 
GROUP BY 
	c.description, i.description

/* What vaccines people with pneumonia received? */

SELECT 
	c.description, 
	i.description 
FROM 
	conditions c 
JOIN 
	immunizations i 
ON 
	c.patient = i.patient 
WHERE 
	c.description 
ILIKE 
	'%neumonia%'
GROUP BY 
	c.description, i.description

	/* What is the average payer coverage by race? */

SELECT 
	race, 
	AVG(payer_coverage) AS avg_payer_coverage 
FROM 
	patients p 
JOIN 
	encounters e 
ON 
	p.id = e.patient 
GROUP BY 
	race 
ORDER BY 
	AVG(payer_coverage) DESC; 

	/* What is the average total claim cost by condition and zip code? */

SELECT 
	c.description, 
	AVG(e.total_claim_cost) AS avg_total_claim_cost, 
	p.zip 
FROM 
	conditions c 
JOIN 
	encounters e 
ON 
	c.patient = e.patient 
JOIN 
	patients p 
ON 
	c.patient = p.Id 
GROUP BY 
	c.description, 
	p.zip 
ORDER BY 
	AVG(e.total_claim_cost) DESC 

	/* What are the patients who had unspecified anemia and were ambulatory? */

SELECT 
	patient 
FROM 
	conditions 
WHERE 
	description = 'Anemia, unspecified'
INTERSECT
SELECT 
	patient 
FROM 
	encounters 
WHERE 
	encounterclass = 'ambulatory'

	/* What was the average healthcare expense by patients segmented by race? */

SELECT
  id,
  race,
  AVG(healthcare_expenses) OVER (
    PARTITION BY
      race
    ORDER BY
     id
  ) AS avg_care_expenses_race_id
FROM
  patients
ORDER BY 
	AVG(healthcare_expenses) DESC
